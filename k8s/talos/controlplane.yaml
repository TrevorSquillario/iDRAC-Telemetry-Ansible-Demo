version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
    type: controlplane # Defines the role of the machine within the cluster.
    token: 3dpr4f.lw0mdeo65wk0ghih # The `token` is used by a machine to join the PKI of the cluster.
    # The root certificate authority of the PKI.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJDUEU0a3VwY3RudVNzRzFLTkNCMDhNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5ERXdNREV4T0RJME1ERmFGdzB6TkRBNU1qa3hPREkwTURGYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBV2dLRjZ6Z2dYcERKWWFvcDFzZDkvQVZ6YytLck5kaFgvWHIrCmczRHlLLzZqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVcEh3NHdJL2pPdXZUVy9OMwpJOVhHTEoxS3FnZ3dCUVlESzJWd0EwRUFoVFdjeTJZalhEcFJQT05jSU56cWNSOFRnOXNVRWhYdEJieG9SVE1GCnVPcWtEU3RidU9nT2RnVGcyTGc2UncyRXZlUVRnMWxvSXVOeUxEUURYY1JWREE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJTk1COTVKbzNXQXcyZzgvV1VuK25IOUQ3K05LZWZoNEhpdU5KSlRUTlVKdwotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10

    # Used to provide additional options to the kubelet.
    kubelet:
        image: ghcr.io/siderolabs/kubelet:v1.30.5 # The `image` field is an optional reference to an alternative kubelet image.
        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53

        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        # extraArgs:
        #     key: value

        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.
        #       type: bind # Type specifies the mount kind.
        #       source: /var/lib/example # Source specifies the source path of the mount.
        #       # Options are fstab style mount options.
        #       options:
        #         - bind
        #         - rshared
        #         - rw

        # # The `extraConfig` field is used to provide kubelet configuration overrides.
        # extraConfig:
        #     serverTLSBootstrap: true

        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
        # credentialProviderConfig:
        #     apiVersion: kubelet.config.k8s.io/v1
        #     kind: CredentialProviderConfig
        #     providers:
        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
        #           defaultCacheDuration: 12h
        #           matchImages:
        #             - '*.dkr.ecr.*.amazonaws.com'
        #             - '*.dkr.ecr.*.amazonaws.com.cn'
        #             - '*.dkr.ecr-fips.*.amazonaws.com'
        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
        #           name: ecr-credential-provider

        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        # nodeIP:
        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        # `interfaces` is used to define the network interface configuration.
        interfaces:
            - interface: eth0 # The interface name.
              dhcp: true # Indicates if DHCP should be used to configure the interface.
              # Virtual (shared) IP address configuration.
              vip:
                ip: 100.77.18.75 # Specifies the IP address to be used.
              
              # # Picks a network device using the selector.

              # # select a device with bus prefix 00:*.
              # deviceSelector:
              #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              # deviceSelector:
              #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
              #     driver: virtio # Kernel driver, supports matching by wildcard.
              # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              # deviceSelector:
              #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
              #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
              #       driver: virtio # Kernel driver, supports matching by wildcard.

              # # Assigns static IP addresses to the interface.
              # addresses:
              #     - 10.5.0.0/16
              #     - 192.168.3.7

              # # A list of routes associated with the interface.
              # routes:
              #     - network: 0.0.0.0/0 # The route's network (destination).
              #       gateway: 10.5.0.1 # The route's gateway (if empty, creates link scope route).
              #     - network: 10.2.0.0/16 # The route's network (destination).
              #       gateway: 10.2.0.1 # The route's gateway (if empty, creates link scope route).

              # # Bond specific options.
              # bond:
              #     # The interfaces that make up the bond.
              #     interfaces:
              #         - enp2s0
              #         - enp2s1
              #     # Picks a network device using the selector.
              #     deviceSelectors:
              #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
              #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
              #           driver: virtio # Kernel driver, supports matching by wildcard.
              #     mode: 802.3ad # A bond option.
              #     lacpRate: fast # A bond option.

              # # Bridge specific options.
              # bridge:
              #     # The interfaces that make up the bridge.
              #     interfaces:
              #         - enxda4042ca9a51
              #         - enxae2a6774c259
              #     # A bridge option.
              #     stp:
              #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.

              # # DHCP specific options.
              # dhcpOptions:
              #     routeMetric: 1024 # The priority of all routes received via DHCP.

              # # Wireguard specific configuration.

              # # wireguard server example
              # wireguard:
              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
              #     listenPort: 51111 # Specifies a device's listening port.
              #     # Specifies a list of peer configurations to apply to a device.
              #     peers:
              #         - publicKey: ABCDEF... # Specifies the public key of this peer.
              #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
              #           allowedIPs:
              #             - 192.168.1.0/24
              # # wireguard peer example
              # wireguard:
              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
              #     # Specifies a list of peer configurations to apply to a device.
              #     peers:
              #         - publicKey: ABCDEF... # Specifies the public key of this peer.
              #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
              #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
              #           allowedIPs:
              #             - 192.168.1.0/24
        
        # # Used to statically set the nameservers for the machine.
        # nameservers:
        #     - 8.8.8.8
        #     - 1.1.1.1

        # # Allows for extra entries to be added to the `/etc/hosts` file
        # extraHostEntries:
        #     - ip: 192.168.1.100 # The IP of the host.
        #       # The host alias.
        #       aliases:
        #         - example
        #         - example.domain.tld

        # # Configures KubeSpan feature.
        # kubespan:
        #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        disk: /dev/sda # The disk used for installations.
        image: ghcr.io/siderolabs/installer:v1.8.0 # Allows for supplying the image used to perform the installation.
        wipe: false # Indicates if the installation disk should be wiped at installation time.
        
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.

        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k

        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Features describe individual Talos features that can be switched on or off.
    features:
        rbac: true # Enable role-based access control (RBAC).
        stableHostname: true # Enable stable default hostname.
        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            enabled: true # Enable KubePrism support - will start local load balancing proxy.
            port: 7445 # KubePrism port.
        # Configures host DNS caching resolver.
        hostDNS:
            enabled: true # Enable host DNS caching resolver.
            forwardKubeDNSToHost: true # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.
        
        # # Configure Talos API access from Kubernetes pods.
        # kubernetesTalosAPIAccess:
        #     enabled: true # Enable Talos API access from Kubernetes pods.
        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
        #     allowedRoles:
        #         - os:reader
        #     # The list of Kubernetes namespaces Talos API access is available from.
        #     allowedKubernetesNamespaces:
        #         - kube-system
    # Configures the node labels for the machine.
    nodeLabels:
        node.kubernetes.io/exclude-from-external-load-balancers: ""
    
    # # Provides machine specific control plane configuration options.

    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.

    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.

    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx

    # # Used to partition, format and mount additional disks.

    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #           
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.

    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824

    # # Allows the addition of user specified files.

    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use

    # # The `env` field allows for the addition of environment variables.

    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

    # # Used to configure the machine's time settings.

    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.

    # # Used to configure the machine's sysctls.

    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"

    # # Used to configure the machine's sysfs.

    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance

    # # Used to configure the machine's container image registry mirrors.
    # registries:
    #     # Specifies mirror configuration for each registry host namespace.
    #     mirrors:
    #         ghcr.io:
    #             # List of endpoints (URLs) for registry mirrors to use.
    #             endpoints:
    #                 - https://registry.insecure
    #                 - https://ghcr.io/v2/
    #     # Specifies TLS & auth configuration for HTTPS image registries.
    #     config:
    #         registry.insecure:
    #             # The TLS configuration for the registry.
    #             tls:
    #                 insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #                 
    #                 # # Enable mutual TLS authentication with the registry.
    #                 # clientIdentity:
    #                 #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #                 #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #             
    #             # # The auth configuration for this registry.
    #             # auth:
    #             #     username: username # Optional registry authentication.
    #             #     password: password # Optional registry authentication.

    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64

    #         # # Defines the encryption sector size.
    #         # blockSize: 4096

    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue

    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.

    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.

    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG

    # # Configures the node annotations for the machine.

    # # node annotations example.
    # nodeAnnotations:
    #     customer.io/rack: r13a25

    # # Configures the node taints for the machine. Effect is optional.

    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    id: uduNjnmmgIqnEYM9t4pj6OTO7bZc4rIqe3ByAtbqiVI= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    secret: GK8UmMYptfW+Cla31KpnX5uDb1esrkYKP+OArrz4pvs= # Shared secret of cluster (base64 encoded random 32 bytes).
    # Provides control plane specific configuration options.
    controlPlane:
        endpoint: https://100.77.18.75:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
    clusterName: ts # Configures the cluster's name.
    # Provides cluster specific network configuration options.
    network:
        dnsDomain: cluster.local # The domain used by Kubernetes DNS.
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
        
        # # The CNI used.
        # cni:
        #     name: custom # Name of CNI to use.
        #     # URLs containing manifests to apply for the CNI.
        #     urls:
        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    token: h7l59t.7qxpciylf5oe9fks # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    secretboxEncryptionSecret: jZ/+3m7ZSNGQCltCs2bUi1iJRJg5/Lo+CbizWHH24pE= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVMrZ0F3SUJBZ0lRYkNPbUZEQ2xLY0puTmtwNnJKT1dnakFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSTBNVEF3TVRFNE1qUXdNVm9YRFRNME1Ea3lPVEU0TWpRdwpNVm93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCSklwalFvL0ZBVmdtWmpXc0JBL2pYSWRFb09IS2g0bVJVbVd3K0RQSEdEWmJycDdKeWhsTlFLQXJ4dEoKSG41U2wraFVIZ3hhcnFPLzRDVW1CZXVJY3ZTallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVVQSGYrSWs4Zjcxb1ZZbENNcXNzNThNOWEzaE13Q2dZSUtvWkl6ajBFQXdJRFNRQXdSZ0loQUpuUk9SSHQKZmgyaWI5d3dwTmU4dHIwbXArVzN4WlVnYVhwYmNsRzhPUEtmQWlFQXpOenBiRlpLNGViOURGcVBiVnRxamdZOQppa1Q0TlZORlFwMkd1N042TFI4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU5xZjNhemlsdVFLRnduNDJTbVJuWnpCdUJpd2pyYUlkMnZJOWhWR0ZkN2ZvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFa2ltTkNqOFVCV0NabU5hd0VEK05jaDBTZzRjcUhpWkZTWmJENE04Y1lObHV1bnNuS0dVMQpBb0N2RzBrZWZsS1g2RlFlREZxdW83L2dKU1lGNjRoeTlBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFXZ0F3SUJBZ0lRUHVWa04zaDczbGxiemhPWWJSNVpvREFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1UQXdNVEU0TWpRd01Wb1hEVE0wTURreU9URTRNalF3TVZvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCRk1VcXlBdjZlMVJLZWhCWldsczJGcUY0SGQ0cEJwUWI1Sk5oR1RRRGRBQ2h0N3Q2cG5DCjIvd2FGMXA0dWdCYWNSaUoxTXA1ekN6UDhZOE5KUFRlWkJtallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVaeHFidTgvMFN2L01GaDZ1bHpEK3NLdXFNUVl3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloCkFLZEk0N3duYjg4M3ZqbDcyQ2xpUVhBeE1rT3JIWnlodmRIRHNYdDJZZUdLQWlBdUhoZ2dPRTQ1by9sQk03Rk4KQnFBT0NQN1RnSjhJdnVPVEVOK3VvdWQ3MXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUtJRXF0NVZDS3VldCthUEZFZ3hGMk9pdStncU1UR0Z2WHZ1TVBIei9EcFlvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFVXhTcklDL3A3VkVwNkVGbGFXellXb1hnZDNpa0dsQnZrazJFWk5BTjBBS0czdTNxbWNMYgovQm9YV25pNkFGcHhHSW5VeW5uTUxNL3hqdzBrOU41a0dRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS2dJQkFBS0NBZ0VBbmE3SWJSa1dCb05nWnN1SXpDVFRiZ3VqSGdGZWd2dkkwVE1pTFRCeUFhTTAwOUZLCkNWMzBHRjZCU2N6cCtZOXNaUHU3K0g1bThsV2RacGlPZ3ZjN1NtZHIxZHRXdlcvdVZJYk8zdUV3cmQxTDNiVmEKSXlEc3hyTzNNRFVFdHNianY1UTljazNLa1FickxBSTg0TzlReS9GZ0NNOHJCdlJhbVFOSEVnL0xWV0FiSHMxWgp1alFndDYwNjN5N29NRkVkNW56WHRtTHduWGl6MHZZamtUWFNqZGdGZjBJdE5CRStFNjk3R2FuTXUyQUU5STEyCkMxeUUyN3pwYVpidHNiejRxUGVmc2xyUUI2c3dEV2EvUkhQY1VxcTkzSEY0SFdtTXFjNkJvV1doTWh4LzZNN0oKdmJ1R3JEWEh2a0FPMnphc2ZrVGVrUzB0NTROSks4Y3NMMnB0QjNTbFpyR0pkSW1MZkNVZTNXVS91a2F3aEszcQp2VUdROXhHQktsZDRUSFptWFRjamNTYkxEbW03QmZDeWhZY3NQYTREZElLaFNyQ0NjdzlTMU9yYVJsNkV0Tzl5CkZuejlNN2dPanFPTlgvYjMvSzFWNU94NVBBV1M2L2lkaHkzUTZ5cUFKQ0wxK0p3UlRySlBSN3dCdFlZWkx5VDcKT3dNQVh1NWdpZUhpb3ZRbWNGRlhhY1ova0tYYnFPQWhyWEtwN3ZBZVlJYlErMmRMb3ZEc0U4Y0NuaWVueDFhYQp2eVFReE9Ta1hHRWRsR2FpRm5DTlRiam1VSzgwbjZnREtwanh6Z1o0MnVndE1ESHJ2Q3JOVW04eDN3V1hTeElzCk5kYjNMeitNMHR0SXp6TWVZQnhHSDFjMzZZdy93QVNtVzNLZjBMMmk5WFkvb3BHL2k0eGxGNmdjbWU4Q0F3RUEKQVFLQ0FnQUtkWHh2MkJrZzUzZnVlWk9pVHRNRFdweEFNa0VObVJ2UjNIMW8xK3pIOVFaZEFtWFJ4enlZblRRZwpMQXBjOWtsdlRVOURoVWJZemhyNW9pYlp3d0pZeGhGZUJ3VnkzVWpHckladVBDdVpiTE5LaW12bkpwanQrUit1CmYrWEhKZHdYYWdMRllTbU5neEw0UVZHK2JjRkROY2h6N1NIaWZUVEJMM2w0VmpuYmVOdHpxSlZLQjRrZ0JjcUEKNFVDZmE5SDY1czc4RndYMHUvdlpnMkFLa3JKYm5EZUpJRitWTTR1VmpLOHluWk9wM2cyV0Z3ZjhhdStaRDZlLwp6RFlKOHduZlUwVnhkQnFXVjZHQlVnNWZ3UHVkTkJ3UjBpandjbjdWQ0pDS253NFpIOURRSlY4MlNZaitSVGJ4CmhKZzNyQ0cyNG1TTTVwMUQzTzV1aS9CL1dLVFFuaDRjeHdzRllQa2tTaHkxZFIrQTNGRHN0Mkg0T1pLdzJCSXEKekRNd3VpWWFMc05tMysydkFBWWRMYk0xMEZQbGdadDBnQmxUazV6a0JpZDRSSzhZNExuYmQzZDVhaUFkY2VVaQpZbVNXSVJ2eDRuSXZLQnd1MSt0aHF6VkdLNWJQakR3T0xnYUtpYVpoVmtzck5pbmJIZmhBQVRLVjFQRlBiQmEzCmZTZFd5elQ0S0tWaEQwNHJ0T3VSZWpJR1Q5Q0pwQTQ5Z0ZrV1RpVWtNMlFSSVdLMU9FQ3RPM1pKZ25iVmdsZEUKQ3Jtc3c3V1VxcmdtdDB6K2J5ZVU1REt3WE16MU9QVHZaR1VVN3NUcGlVMG1oMGxNUUNMcXhPNmJNdklBenR0TApCMVIvL3pVUmVZb2Jwam5qSTF5ODB5QStTa0RZeEpxYkdueDd5QmkvbmMvSENPV1ZNUUtDQVFFQXdtUUF3MTlhCmxBakhMZ2Vpc1ZSdVFWWlhMbWlvU3o2KzNQOG0ybnZUbU9EbnNXYTBEakZxRVA0SlpDRVNoOHFNbzJNdkZvR0QKaHorUS9aNHkreUZBM3dYZ2FQeUtNNDJFTnhKaGk2UHRZZ2oxWjZRQ2M0ZzhvSEhvbnFjM00ybHVxeVFmazJtKwpYSXhhZ3BXNG41a2tvS0tTYWNiMEZGang4WGVOVCtXR3ovWGQ1V1BIVU9CT2VrK2REY0t2Q2kzUmpPTWxTRm1VCkc4bDJ1ZEdCNGxad2VoNlBGazVXQnZzRzRsbDZzN1phbTI0WmRKcm4wS1F5aCtJdmJiOUxsaGNHbmx0ZEZNb0IKTXdMcmV2Z2traDU0a29OVXU0eTZxZVFlZDBMbVN1TGZNMDBmZXJUUlIraWVRYzNnT004LzJzdnZuKzM2SkZudgppaC8zSlQxYmRwL0xHUUtDQVFFQXo2aDJ3NWtXSWFYM25YVmMzcDRYY1JPdTNTbmkwRmRnbmxXdElkTElEZEo0Ckh4MUlXck84Sitra215WjQrUW5WNzhZaHdyUlNGczBCR2lnbTltb3hKWldOQXlLaTNhSmJkeXpOeHNMMS9HYXkKRjdKaEVqY1V0U1lhRzRwMTJtMXRIODFxOTc0aVU3bFBFeUlBa3lFT09pQ1MzcjFmd05RTE5IN0ZrdExGTDVIVwpzd0J1YXhFblFHRGJBODlqSHgyQ083anVhazVDVERCYVBKK3hNbHdNL3Q3dnpveUxkam5ZRm1NOWJpdTNnUHJYCmMrcy9JVmRHZkQ0QUhKdlNVaHB3WHR3cEh1cTdWNXZUajFmZVpNVjBuZUhLNHJQM3NzM3hHMi9xYUVNZEVYc2QKQm1uMFdVM3JERU5XMHNrUk12QmhwaUxGcWlQOWpVWnZjZmZPaHhRMlJ3S0NBUUVBblpXRUtOMjhDQlcxb2xMKwpTTk14TGpaWUpuOGhMeDZHaTVFc1ppSEx2enRUbURTeDhtK01sSW5jQXhmc2RiaDFtbDVsWmRGSVZ2UHBEakNaCkU0dzVrcEtwQVhMNGRpSmE5R29xT1pHQ2R0N2NVbEJhekYyOUNEUlBaNDRXNmM2bXNJWndNb2lla1ZnV1o1WUkKUFJsZzMvZnF5V1ZIcU5jU0M3WG5FTVg1SzgwZFBVQk42L3BxcEN5MkhObWVISnBZTGVaVjZ2anpZRE5KMUFsTApTYmpaSmFad1NKem9rSEFmZkk4ZE1XSzZ3UlhYL1BjMnhhVFdjZUdpb1UxYWNTbnBhNmFWSnEwN202YmFUcTJxCnQrbUx4UHBDVG1nZlNtcHJhRE1MamRtdEoyRjJDM3RaelBsK2tjbmI0ekhmaWZlWklnVkJxd1pkY1pQSVBxQW0KN1Z0TXdRS0NBUUVBcXJXZkRLVW80SGlEMnRuRWd1NEw3MVZ6QnpXTDFDSkF0MmxQYnVMTXV6QXV0OFZtMmNtdwpBRTlWWElhQUpKckZXTnZVblMrSDNGNmpiVkZjMW0zdUFTdTBSTU9RaUFzVWppQXkraGNFQ1g2VElZL3U1UDZLCjgzQmpQZ2pSWWNOYlZpMlVwaDJVTXFmQUxjWmlHcEd1RkhMNnlrbDhFaFUvTU9TV24yRE40WkZPb3REVDlRaWcKNy9ldmxLNUVtaXUwQ0V5N0VvRkxWejdZcjhYSDhkSmlqSlBSS0VlNXpuTTNCUkNJUzYxOHFYZU03eXFSTjJONworbDh0MEZiNHk2NFllcU1hMnVPMUp3eGZHeFB0SzRKM24rTWkyc04vK1duN3I4YU5PVEVURUcvWktKQ3A0MUIrCnpoSDlxa0xJOU10UU96ZVNyNC91dk5rT2ZPNXV4ZlVEdVFLQ0FRRUFqN0drMGNzTkNmYjNZdUpQbklVWldURXAKZHdyd3VkVE05ZkJWRzNIZmRwRmpKQUlhdXIraUVIV3JDZWE5WnFrYkJDbW0yb2gvWnFVZXgvV0FLRVhuQjVkYgpxTEVNeFlVWXplbHRYd0ZQV2VHWElxeDhkSnJvOWZkRUExZGFudmsweVJBT0JJUXc0MEVGZ3lheGFzNlNnaTU4CkFuMXpuNDNEKzI3QnUvclFEcDdKNlZicFVleS9Vd2V3cE5YSThUSG9XRFFTUFZ0eDBSenczZHNXL3BrRW5GZWkKM2toWjhaTWJ2R0JTRG1zSGlEK1V5VkhhVG5oNjNBeUQvM2NwcVhOdjhnd3VtRUZiclVPU1NGSmFtaVMvMmsxbQphUG83TXNOKzcySDVycUJOcXdTVnV6MExVTWlkd3N0R1pJL1BDRHFxZFd0bUczaHdFeUtJUWtXbzZOeXM1QT09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
    # API server specific configuration options.
    apiServer:
        image: registry.k8s.io/kube-apiserver:v1.30.5 # The container image used in the API server manifest.
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 100.77.18.75
        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.
        # Configure the API server admission plugins.
        admissionControl:
            - name: PodSecurity # Name is the name of the admission controller.
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                        - openebs
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        image: registry.k8s.io/kube-controller-manager:v1.30.5 # The container image used in the controller manager manifest.
    # Kube-proxy server-specific configuration options
    proxy:
        image: registry.k8s.io/kube-proxy:v1.30.5 # The container image used in the kube-proxy manifest.
        
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        image: registry.k8s.io/kube-scheduler:v1.30.5 # The container image used in the scheduler manifest.
    # Configures cluster member discovery.
    discovery:
        enabled: true # Enable the cluster membership discovery feature.
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                disabled: true # Disable Kubernetes discovery registry.
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQU95M0ZYM3VuWGkyVDBJUVh2SG9SNlV3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TkRFd01ERXhPREkwTURGYUZ3MHpOREE1TWpreE9ESTBNREZhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFUQnpITlBDVTk0Cjg5RTNBZkQ1aUNKQncyWlhBSkFtVU9zSGg3aVl4cVZpMHNONnhNeWdRZWhUcFREMkk1aG5JWW9BcjlhbUhpNysKT3FNS2c5UHZmZHhHbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNTNUZmdnVYTGNuCnU0RGdjR2ExT1lJNXE2RURNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUUQrZFpNaHBIUFVvZ3JFK29tVXQzcW0KRzFzdzFPSFJNZ0NlbzhMaXVkUnZ4QUlnZHBRM0VPYlAvTVczd1pFalJNWDVubFBEUWlSL1FlNGdhRjZvZmFyVwpLVjA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZKTks3ZXhLaGNoWEdudmJkLzYvblB1SmpBYmcweW5KNXRHTmJyb1pxdlRvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFd2N4elR3bFBlUFBSTndIdytZZ2lRY05tVndDUUpsRHJCNGU0bU1hbFl0TERlc1RNb0VIbwpVNlV3OWlPWVp5R0tBSy9XcGg0dS9qcWpDb1BUNzMzY1JnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
        
        # # The container image used to create the etcd service.
        # image: gcr.io/etcd-development/etcd:v3.5.16

        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.
        # advertisedSubnets:
        #     - 10.0.0.0/8
    
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).

    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=

    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.11.3 # The `image` field is an override to the default coredns image.

    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml

    # # A list of urls that point to additional manifests.
    # extraManifests:
    #     - https://www.example.com/manifest1.yaml
    #     - https://www.example.com/manifest2.yaml

    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info

    # # A list of inline Kubernetes manifests.
    # inlineManifests:
    #     - name: namespace-ci # Name of the manifest.
    #       contents: |- # Manifest contents as a string.
    #         apiVersion: v1
    #         kind: Namespace
    #         metadata:
    #         	name: ci

    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).

    # # Allows running workload on control-plane nodes.
    # allowSchedulingOnControlPlanes: true
